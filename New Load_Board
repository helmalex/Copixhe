def load_board(path, game) :
    """Read the board datas and organise them in a data structure
    
    Parameters
    -----------
    path : string that contains the path towards the map file (str).
    game : data structure that contains all the data of the game (dict).
    
    Version
    -----------
    specification : Alexandre Helman (v.1 05/03/2021)
    implementation : Alexandre Helman, Bastien Marchal (v.4 08/03/2021)
    """
    
    infos = open(path, 'r') 
    load = infos.readlines()
    
    ## chaque niveau d'imbrication verifie que les informations du plateau sont correctement disposees
    if load[0] == 'map:\r\n' or 'map:\n' or 'map:\r' : 
        y_board = int(load[1][0] + load[1][1])
        x_board = int(load[1][3] + load[1][4])

        if load[2] == 'anthills:\r\n' or 'anthills:\r' or 'anthills:\n' : 
            ## extrait les coordonnees de la fourmiliere orange
            if load[3][1] != ' ' :
                anthills_orange_y = int(load[3][0] + load[3][1])
                if load[3][4] !=  '\n' or '\r' or ' ' :
                    anthills_orange_x = int(load[3][3] + load[3][4])
                elif load[3][4] == '\n' or '\r' or ' ':
                    anthills_orange_x = int(load[3][3])
            elif load[3][1] == ' ' :
                anthills_orange_y = int(load[3][0])
                if load[3][3] != '\n' or '\r' or ' ' :
                    anthills_orange_x = int(load[3][2] + load[3][3])
                elif load[3][3] == '\n' or '\r' or ' ':
                    anthills_orange_x = int(load[3][2])

            ## extrait les coordonnees de la fourmiliere bleue
            if load[4][1] != ' ' :
                anthills_blue_y = int(load[4][0] + load[4][1])
                if load[4][4] != '\n' or '\r' or ' ' :
                    anthills_blue_x = int(load[4][3] + load[4][4])
                elif load[4][4] == '\n' or '\r' or ' ':
                    anthills_blue_x = int(load[4][3])
            elif load[4][1] == ' ' :
                anthills_blue_y = int(load[4][0])
                if load[4][3] != '\n' or '\r' or ' ' :
                    anthills_blue_x = int(load[4][2] + load[4][3])
                elif load[4][3] == '\n' or '\r' or ' ':
                    anthills_blue_x = int(load[4][2])

            ## verifie que la partie clods commence correctement
            if load[5] == 'clods:\r\n' or 'clods:\n' or 'clods:\r' :
                n = 0
                for length in load :
                    n += 1
                
                nb_clod = 0
                for line in range(6, n) :
                
                    if load[line][1] != " " :
                        clodx = int(load[line][0] + load[line][1])
                        if load[line][4] != " " :
                            clody = int(load[line][3] + load[line][4])
                            clod_weigth = int(load[line][6])
                        elif load[line][4] == " " :
                            clody = int(load[line][3])
                            clod_weigth = int(load[line][5])
                    elif load[line][1] == " " :
                        clodx = int(load[line][0])
                        if load[line][3] != " " :
                            clody = int(load[line][2] + load[line][3])
                            clod_weigth = int(load[line][5])
                        elif load[line][3] == " " :
                            clody = int(load[line][2])
                            clod_weigth = int(load[line][4])

                    ## range les informations sur les mottes dans la structure de données
                    game["clods"].append((clody, clodx, clod_weigth))
                    nb_clod += 1

            ## range les informations sur les fourmilieres dans la structure de données
            game["anthills"]["orange"]["x"] = anthills_orange_x
            game["anthills"]["orange"]["y"] = anthills_orange_y
            game["anthills"]["blue"]["x"] = anthills_blue_x
            game["anthills"]["blue"]["y"] = anthills_blue_y

        ## range les informations sur la taille du plateau dans la structure de données
        game["board"]["length_x"] = x_board
        game["board"]["length_y"] = y_board

    else :
        print("Votre fichier n'a pas le format requis.")
