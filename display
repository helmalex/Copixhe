from blessed import Terminal

nb_clod = load_board(path, game)



def display(game_mode, game):
    """This function show the game board after each turns. If the game is played by 2 bots (0 players), there will be a 500ms break before each turn
    
    Parameters :
    ====================================================================
    game_mode : how many users there will be (0,1,2) (int)
    game : data structure that contains game's informations (dict)
    
    Version :
    ====================================================================
    specification : Antoine Culot (v.1 21/02/21)
    implementation : Antoine Culot (v.3,1 23/03/21)
    """

    term = Terminal()
    print(term.home + term.white_on_black + term.clear)

    #board parameters
    map_wight = game["board"]["length_x"]
    map_height = game["board"]["length_y"]
    anthill_1 = [game["anthills"]["blue"]["x"], game["anthills"]["blue"]["y"]]
    anthill_2 = [game["anthills"]["orange"]["x"], game["anthills"]["orange"]["y"]]

    #verify if the terminal is big enough to display the board 
    if term.height <= map_height and term.width < map_wight * 3 + 5:
        print('FATAL ERROR : YOUR TERMINAL IS NOT BIG ENOUGH TO DISPLAY THE BOARD')
    else:
        #create the board
        for x in range(map_wight):
            number = x+1
            print(term.move_xy(x*3+5, 0) + str(number))
        print('    '+' __'*map_wight)
        for y in range(map_height):
            if y < 9:
                print(' '+ str(y+1) + '  ' + '|__'*map_wight + '|')
            else:
                print(str(y+1) + '  ' + '|__'*map_wight + '|')

        #put the blue anthills on the board
        x_blue_target = game["anthills"]["blue"]["x"]
        y_blue_target = game["anthills"]["blue"]["y"]
        x_locate = x_blue_target * 3 + 2
        y_locate = y_blue_target + 1


        for y in range(3):
            print(term.move_yx(y_locate - (y-1), x_locate - 4) + term.white_on_blue + '|__'*3 + '|')
        print(term.move_yx(y_locate, x_locate) + '\u23CF')

        #put the orange anthills on the board
        x_orange_target = game["anthills"]["orange"]["x"]
        y_orange_target = game["anthills"]["orange"]["y"]
        x_locate = x_orange_target * 3 + 2
        y_locate = y_orange_target + 1

        for y in range(3):
            print(term.move_yx(y_locate - (y-1), x_locate - 4) + term.white_on_orange + '|__'*3 + '|')
        print(term.move_yx(y_locate, x_locate) + '\u23CF')

        #put all the clods on the board

        clod = -1
        for clods in game["clods"]:
            clod += 1
            x_locate = game["clods"][clod][0]
            y_locate = game["clods"][clod][1]
            if game["clods"][clod][2] == 1:
                print(term.move_yx(y_locate + 1, x_locate * 3 + 2) + term.white_on_coral1 + '\U0001f4a9')
            if game["clods"][clod][2] == 2:
                print(term.move_yx(y_locate + 1, x_locate * 3 + 2) + term.white_on_salmon4 + '\U0001f4a9') 
            if game["clods"][clod][2] == 3:
                print(term.move_yx(y_locate + 1, x_locate * 3 + 2) + term.white_on_coral4 + '\U0001f4a9') 

        #put the legend

        if term.height > map_height + 9:
            print(term.move_yx(map_height + 3, 0) + term.white_on_black + 'Summary :')
            #clods
            print(term.move_yx(map_height + 4, 0) + term.white_on_coral1 + '\U0001f4a9' + term.white_on_black + ' : clod level 1')
            print(term.move_yx(map_height + 5, 0) + term.white_on_salmon4  + '\U0001f4a9' + term.white_on_black + ' : clod level 2')
            print(term.move_yx(map_height + 6, 0) + term.white_on_coral4 + '\U0001f4a9' + term.white_on_black + ' : clod level 3')
            #anthills
            print(term.move_yx(map_height + 4, term.width//3) + term.white_on_blue + '\u23CF' + ' ' + term.white_on_black + ' : blue team anthill')
            print(term.move_yx(map_height + 5, term.width//3) + term.white_on_orange + '\u23CF' + ' ' + term.white_on_black + ' : orange team anthill')
            #blue ants
            print(term.move_yx(map_height + 7, 0) + term.white_on_aqua + '\U0001f41c' + term.white_on_black + ' : blue ant level 1')
            print(term.move_yx(map_height + 8, 0) + term.white_on_blue + '\U0001f41c' + term.white_on_black + ' : blue ant level 2')
            print(term.move_yx(map_height + 9, 0) + term.white_on_cyan4 + '\U0001f41c' + term.white_on_black + ' : blue ant level 3')
            #orange ants
            print(term.move_yx(map_height + 7, term.width//3) + term.white_on_yellow + '\U0001f41c' + term.white_on_black + ' : orange ant level 1')
            print(term.move_yx(map_height + 8, term.width//3) + term.white_on_orange + '\U0001f41c' + term.white_on_black + ' : orange ant level 2')
            print(term.move_yx(map_height + 9, term.width//3) + term.white_on_red + '\U0001f41c' + term.white_on_black + ' : orange ant level 3')
            #note
            print(term.move_yx(map_height + 4, term.width//3*2) + 'Note : a clod carried by an ant')
            print(term.move_yx(map_height + 5, term.width//3*2) + 'takes on the color of the ant')


        print(term.move_yx(term.height, 0) + term.white_on_black)
        
diplay(0, game)
